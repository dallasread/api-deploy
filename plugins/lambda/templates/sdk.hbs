var AWS = window.AWS,
    API;

var creds = new AWS.CognitoIdentityCredentials({
    IdentityPoolId: '{{aws.IdentityPoolId}}'
});

AWS.config.update({
    region: '{{aws.region}}',
    credentials: creds
});

creds.get(function (err, data) {
    API.debug && err && console.warn(err);
});

var lambda = new AWS.Lambda();

function invoke(func, payload, done) {
    lambda.invoke({
        FunctionName: func,
        Payload: JSON.stringify(payload)
    }, function(err, data) {
        var payload;

        if (API.debug) console.log(func, err, data);

        if (err) return done(err);

        try {
            payload = JSON.parse(data.Payload);
        } catch (e) {}

        if ('errorMessage' in payload) return done(payload.errorMessage);

        done(null, payload);
    });
}

API = {
    debug: false,

{{#each methods}}
    {{#if data.x-api-deploy}}
        {{#if data.x-api-deploy.sdk.method}}
    {{data.x-api-deploy.sdk.method}}: function {{data.x-api-deploy.sdk.method}}(data, headers, done) {
    {{#if data.x-amazon-lambda.arn}}
        if (!done && typeof headers === 'function') {
            done = headers;
            headers = null;
        }

        for (var key in headers) {
            data[key] = headers[key];
        }

        invoke('{{data.x-amazon-lambda.arn}}', data, done);
    {{else}}
        this.debug && console.warn('Lambda not deployed:', '{{data.x-api-deploy.sdk.method}}');
    {{/if}}
    },
        {{/if}}
    {{/if}}
{{/each}}
};

if (window) window.{{sdk.name}} = API;
module.exports = API;
